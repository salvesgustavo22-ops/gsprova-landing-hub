name: Legal pages + Footer + Forms + Supabase (LGPD)

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  legal-lgpd:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure folders
        run: |
          mkdir -p src/pages
          mkdir -p src/components/legal
          mkdir -p src/components
          mkdir -p src/lib
          mkdir -p supabase/migrations

      # ====== Libs de suporte ======
      - name: Create/Update legal constants/util
        run: |
          cat > src/lib/legal.ts <<'EOF'
          export const ORG_LEGAL_NAME = "GUSTAVO SOUZA ALVES";
          export const ORG_CNPJ = "55.454.341/0001-29";
          export const CONTACT_EMAIL = "gsaprova@gsmatematicanegocios.com.br";
          export const WHATSAPP_LINK = "https://wa.me/5511974969036";
          export const LAST_UPDATED = "15/09/2025";

          const STORAGE_KEY = "gsaprova.cookie.prefs";
          export type CookiePrefs = { necessary: boolean; analytics: boolean; marketing: boolean; };

          export function getCookiePrefs(): CookiePrefs | null {
            if (typeof window === "undefined") return null;
            try { const raw = localStorage.getItem(STORAGE_KEY); return raw ? (JSON.parse(raw) as CookiePrefs) : null; }
            catch { return null; }
          }
          export function setCookiePrefs(prefs: CookiePrefs) {
            if (typeof window === "undefined") return;
            localStorage.setItem(STORAGE_KEY, JSON.stringify({ ...prefs, necessary: true }));
          }
          EOF

      - name: Create minimal Supabase client if missing
        run: |
          if [ ! -f "src/lib/supabase.ts" ]; then
            cat > src/lib/supabase.ts <<'EOF'
            import { createClient } from "@supabase/supabase-js";
            const url = import.meta.env.VITE_SUPABASE_URL as string;
            const anon = import.meta.env.VITE_SUPABASE_ANON_KEY as string;
            if (!url || !anon) { console.warn("Supabase env vars ausentes"); }
            export const supabase = createClient(url!, anon!);
            EOF
          fi

      # ====== Componentes legais (layout, cookies, consentimento, formulário LGPD) ======
      - name: Write LegalLayout.tsx
        run: |
          cat > src/components/legal/LegalLayout.tsx <<'EOF'
          import React, { PropsWithChildren } from "react";
          type Props = PropsWithChildren<{ title: string; lastUpdated?: string }>;
          export default function LegalLayout({ title, lastUpdated, children }: Props) {
            return (
              <main className="mx-auto max-w-3xl px-6 py-10">
                <h1 className="text-3xl font-bold mb-2">{title}</h1>
                {lastUpdated && <p className="text-sm text-gray-500 mb-8">Última atualização: {lastUpdated}</p>}
                <div className="prose prose-slate max-w-none">{children}</div>
              </main>
            );
          }
          EOF

      - name: Write CookieBanner.tsx
        run: |
          cat > src/components/legal/CookieBanner.tsx <<'EOF'
          import React, { useEffect, useState } from "react";
          import { setCookiePrefs, getCookiePrefs, CookiePrefs } from "../../lib/legal";
          export default function CookieBanner() {
            const [visible, setVisible] = useState(false);
            useEffect(() => { const prefs = getCookiePrefs(); if (!prefs) setVisible(true); }, []);
            const acceptAll = () => { const all: CookiePrefs = { necessary: true, analytics: true, marketing: true }; setCookiePrefs(all); setVisible(false); };
            const rejectNonEssential = () => { const minimal: CookiePrefs = { necessary: true, analytics: false, marketing: false }; setCookiePrefs(minimal); setVisible(false); };
            if (!visible) return null;
            return (
              <div className="fixed bottom-4 inset-x-0 px-4">
                <div className="mx-auto max-w-3xl rounded-2xl border bg-white p-4 shadow">
                  <p className="mb-3 text-sm">
                    Usamos cookies para melhorar sua experiência, medir audiência e personalizar conteúdo.
                    Você pode aceitar todos ou gerenciar preferências.
                  </p>
                  <div className="flex gap-2">
                    <button onClick={acceptAll} className="rounded-xl border px-3 py-2 text-sm">Aceitar todos</button>
                    <button onClick={rejectNonEssential} className="rounded-xl border px-3 py-2 text-sm">Rejeitar não essenciais</button>
                    <a href="/privacidade#cookie-preferences" className="rounded-xl border px-3 py-2 text-sm underline" onClick={() => setVisible(false)}>Gerenciar preferências</a>
                  </div>
                </div>
              </div>
            );
          }
          EOF

      - name: Write ConsentCheckboxes.tsx
        run: |
          cat > src/components/legal/ConsentCheckboxes.tsx <<'EOF'
          import React, { useEffect, useState } from "react";
          import { CookiePrefs, getCookiePrefs, setCookiePrefs } from "../../lib/legal";
          export default function ConsentCheckboxes() {
            const [prefs, setPrefs] = useState<CookiePrefs>({ necessary: true, analytics: false, marketing: false });
            useEffect(() => { const saved = getCookiePrefs(); if (saved) setPrefs(saved); }, []);
            const update = (key: keyof CookiePrefs) => (e: React.ChangeEvent<HTMLInputElement>) => {
              const next = { ...prefs, [key]: e.target.checked || key === "necessary" };
              if (key === "necessary") next.necessary = true;
              setPrefs(next);
            };
            const save = () => { setCookiePrefs(prefs); alert("Preferências salvas."); };
            return (
              <div id="cookie-preferences" className="rounded-2xl border p-4 space-y-3">
                <label className="flex items-center gap-2"><input type="checkbox" checked readOnly /> <span><strong>Necessários</strong> (sempre ativos)</span></label>
                <label className="flex items-center gap-2"><input type="checkbox" checked={prefs.analytics} onChange={update("analytics")} /> <span>Analytics</span></label>
                <label className="flex items-center gap-2"><input type="checkbox" checked={prefs.marketing} onChange={update("marketing")} /> <span>Marketing</span></label>
                <button onClick={save} className="rounded-xl border px-3 py-2 text-sm">Salvar preferências</button>
              </div>
            );
          }
          EOF

      - name: Write DataRequestForm.tsx
        run: |
          cat > src/components/legal/DataRequestForm.tsx <<'EOF'
          import React, { useState } from "react";
          import { CONTACT_EMAIL, WHATSAPP_LINK } from "../../lib/legal";
          export default function DataRequestForm() {
            const [name, setName] = useState("");
            const [emailOrWhats, setEmailOrWhats] = useState("");
            const [requestType, setRequestType] = useState("acesso");
            const [message, setMessage] = useState("");
            const subject = encodeURIComponent(`LGPD - Solicitação de ${requestType} de dados`);
            const body = encodeURIComponent(`Nome: ${name}\nContato: ${emailOrWhats}\nTipo de solicitação: ${requestType}\n\nDescrição:\n${message}\n`);
            return (
              <div className="rounded-2xl border p-4 space-y-3">
                <div className="grid gap-3 sm:grid-cols-2">
                  <input className="rounded-xl border px-3 py-2" placeholder="Seu nome completo" value={name} onChange={(e) => setName(e.target.value)} />
                  <input className="rounded-xl border px-3 py-2" placeholder="Seu e-mail ou WhatsApp" value={emailOrWhats} onChange={(e) => setEmailOrWhats(e.target.value)} />
                </div>
                <select className="rounded-xl border px-3 py-2" value={requestType} onChange={(e) => setRequestType(e.target.value)}>
                  <option value="acesso">Acesso aos dados</option>
                  <option value="correcao">Correção</option>
                  <option value="eliminacao">Eliminação</option>
                  <option value="portabilidade">Portabilidade</option>
                  <option value="informacoes">Informações sobre compartilhamentos</option>
                  <option value="revogacao-consentimento">Revogação de consentimento</option>
                </select>
                <textarea className="w-full rounded-xl border px-3 py-2" rows={4} placeholder="Descreva sua solicitação." value={message} onChange={(e) => setMessage(e.target.value)} />
                <div className="flex flex-wrap gap-2">
                  <a className="rounded-xl border px-3 py-2 text-sm underline" href={`mailto:${CONTACT_EMAIL}?subject=${subject}&body=${body}`}>Enviar por e-mail (DPO)</a>
                  <a className="rounded-xl border px-3 py-2 text-sm underline" href={WHATSAPP_LINK} target="_blank" rel="noreferrer">Abrir no WhatsApp</a>
                </div>
                <p className="text-xs text-gray-500">Prazo-alvo: até 48h úteis.</p>
              </div>
            );
          }
          EOF

      # ====== Páginas legais ======
      - name: Write Sobre.tsx
        run: |
          cat > src/pages/Sobre.tsx <<'EOF'
          import React from "react";
          import CookieBanner from "../components/legal/CookieBanner";
          import { LAST_UPDATED, ORG_LEGAL_NAME, ORG_CNPJ, CONTACT_EMAIL } from "../lib/legal";
          export default function Sobre() {
            return (
              <main className="mx-auto max-w-3xl px-6 py-10">
                <h1 className="text-3xl font-bold mb-2">Sobre o GS Aprova</h1>
                <p className="text-sm text-gray-500 mb-8">Última atualização: {LAST_UPDATED}</p>
                <CookieBanner />
                <section className="space-y-4">
                  <h2 className="text-xl font-semibold">Quem somos</h2>
                  <p>O GS Aprova é uma plataforma educacional focada em desempenho real em provas (ENEM, vestibulares e concursos).</p>
                  <h2 className="text-xl font-semibold">O que fazemos</h2>
                  <ul className="list-disc pl-5 space-y-2">
                    <li>Correção de redação com feedback detalhado.</li>
                    <li>Aulas e mentorias focadas nos pontos críticos.</li>
                    <li>Materiais e exercícios práticos.</li>
                  </ul>
                  <h2 className="text-xl font-semibold">Titularidade e contato</h2>
                  <p>Plataforma de {ORG_LEGAL_NAME} — CNPJ {ORG_CNPJ}. Contato: <a className="underline" href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a>.</p>
                </section>
              </main>
            );
          }
          EOF

      - name: Write Termos.tsx
        run: |
          cat > src/pages/Termos.tsx <<'EOF'
          import React from "react";
          import CookieBanner from "../components/legal/CookieBanner";
          import { LAST_UPDATED } from "../lib/legal";
          export default function Termos() {
            return (
              <main className="mx-auto max-w-3xl px-6 py-10">
                <h1 className="text-3xl font-bold mb-2">Termos de Uso</h1>
                <p className="text-sm text-gray-500 mb-8">Última atualização: {LAST_UPDATED}</p>
                <CookieBanner />
                <section className="space-y-4">
                  <h2 className="text-xl font-semibold">1. Aceite</h2>
                  <p>Ao usar o site, enviar redações ou contratar serviços, você declara que aceita estes Termos e a <a href="/privacidade" className="underline">Política de Privacidade</a>.</p>
                  <h2 className="text-xl font-semibold">2. Serviços</h2>
                  <p>Correção de redações e orientação de estudos.</p>
                  <h2 className="text-xl font-semibold">3. SLA</h2>
                  <p>Entrega em até <strong>48h úteis</strong> após confirmação do pagamento e recebimento correto do material.</p>
                  <h2 className="text-xl font-semibold">4. Menores</h2>
                  <p>Exige consentimento do responsável legal (podemos solicitar comprovação).</p>
                </section>
              </main>
            );
          }
          EOF

      - name: Write Privacidade.tsx
        run: |
          cat > src/pages/Privacidade.tsx <<'EOF'
          import React from "react";
          import LegalLayout from "../components/legal/LegalLayout";
          import CookieBanner from "../components/legal/CookieBanner";
          import ConsentCheckboxes from "../components/legal/ConsentCheckboxes";
          import DataRequestForm from "../components/legal/DataRequestForm";
          import { CONTACT_EMAIL, WHATSAPP_LINK, ORG_LEGAL_NAME, ORG_CNPJ, LAST_UPDATED } from "../lib/legal";
          export default function Privacidade() {
            return (
              <LegalLayout title="Política de Privacidade (LGPD)" lastUpdated={LAST_UPDATED}>
                <CookieBanner />
                <section className="space-y-4">
                  <h2 className="text-xl font-semibold">1. Controlador e DPO</h2>
                  <p>Controlador: <strong>{ORG_LEGAL_NAME} — CNPJ {ORG_CNPJ}</strong>.<br/>DPO: <a className="underline" href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a>.</p>
                  <h2 className="text-xl font-semibold">2. Dados coletados</h2>
                  <ul className="list-disc pl-5 space-y-2"><li>Nome, e-mail, WhatsApp; redações; registros técnicos; dados de comprovantes.</li></ul>
                  <h2 className="text-xl font-semibold">3. Bases legais</h2>
                  <ul className="list-disc pl-5 space-y-2"><li>Execução de contrato, consentimento, legítimo interesse, obrigação legal.</li></ul>
                  <h2 className="text-xl font-semibold">4. Finalidades</h2>
                  <ul className="list-disc pl-5 space-y-2"><li>Prestação e melhoria dos serviços; comunicação; métricas e segurança; marketing (opt-in).</li></ul>
                  <h2 className="text-xl font-semibold">5. Compartilhamento</h2>
                  <p>Provedores de infraestrutura e autoridades quando exigido. Não vendemos dados.</p>
                  <h2 className="text-xl font-semibold">6. Retenção</h2>
                  <p>Dados de serviço: durante a relação e por até 5 anos após; consentimento: até revogação.</p>
                  <h2 className="text-xl font-semibold">7. Segurança</h2>
                  <p>Medidas técnicas e administrativas; notificaremos incidentes relevantes.</p>
                  <h2 className="text-xl font-semibold">8. Direitos do titular</h2>
                  <p>Contato: <a className="underline" href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a> | <a className="underline" href={WHATSAPP_LINK} target="_blank" rel="noreferrer">WhatsApp</a> (48h úteis).</p>
                  <h2 className="text-xl font-semibold">9. Preferências de cookies</h2>
                  <ConsentCheckboxes />
                  <h2 className="text-xl font-semibold">10. Solicitações LGPD</h2>
                  <DataRequestForm />
                </section>
              </LegalLayout>
            );
          }
          EOF

      # ====== Router: adiciona rotas para as novas páginas (idempotente) ======
      - name: Patch routes in src/main.tsx (React Router)
        run: |
          if [ -f "src/main.tsx" ]; then
            # Se não existirem, injeta as rotas básicas.
            if ! grep -q 'path="/termos"' src/main.tsx; then
              awk '
                /<BrowserRouter>/ && !seen++ {
                  print;
                  print "    <Routes>";
                  print "      <Route path=\"/\" element={<App />} />"
                  print "      <Route path=\"/termos\" element={<(require(\"./pages/Termos\")).default />} />"
                  print "      <Route path=\"/privacidade\" element={<(require(\"./pages/Privacidade\")).default />} />"
                  print "      <Route path=\"/sobre\" element={<(require(\"./pages/Sobre\")).default />} />"
                  print "    </Routes>";
                  next
                }1
              ' src/main.tsx > src/main.tsx.tmp && mv src/main.tsx.tmp src/main.tsx || true
            fi
          fi

      # ====== Footer: adiciona links Sobre/Termos/Privacidade ======
      - name: Update footer.tsx with legal links
        run: |
          cat > src/components/footer.tsx <<'EOF'
          import React from "react";
          export default function Footer() {
            return (
              <footer className="border-t py-6 text-sm">
                <div className="mx-auto max-w-6xl px-4 flex flex-col sm:flex-row items-center justify-between gap-3">
                  <p>&copy; {new Date().getFullYear()} GS Aprova. Todos os direitos reservados.</p>
                  <nav className="flex gap-4">
                    <a className="underline" href="/sobre">Sobre</a>
                    <a className="underline" href="/termos">Termos</a>
                    <a className="underline" href="/privacidade">Privacidade</a>
                  </nav>
                </div>
              </footer>
            );
          }
          EOF

      # ====== Páginas de formulários: adiciona checkboxes e integra Supabase ======
      - name: Update lead-checklist.tsx
        run: |
          cat > src/pages/lead-checklist.tsx <<'EOF'
          import React, { useState } from "react";
          import { supabase } from "../lib/supabase";
          export default function LeadChecklist() {
            const [nome, setNome] = useState(""); const [email, setEmail] = useState(""); const [whats, setWhats] = useState("");
            const [privacyConsent, setPrivacyConsent] = useState(false); const [marketingOptIn, setMarketingOptIn] = useState(false);
            const submit = async (e: React.FormEvent) => {
              e.preventDefault(); if (!privacyConsent) { alert("Aceite a Política de Privacidade."); return; }
              const { error } = await supabase.from("leads").insert([{ nome, email, whats, privacy_consent: privacyConsent, marketing_opt_in: marketingOptIn }]);
              if (error) { alert("Erro: " + error.message); } else { alert("Enviado!"); }
            };
            return (
              <form onSubmit={submit} className="mx-auto max-w-xl space-y-3 p-4">
                <input className="border rounded px-3 py-2 w-full" placeholder="Nome" value={nome} onChange={(e)=>setNome(e.target.value)} />
                <input className="border rounded px-3 py-2 w-full" placeholder="E-mail" value={email} onChange={(e)=>setEmail(e.target.value)} />
                <input className="border rounded px-3 py-2 w-full" placeholder="WhatsApp" value={whats} onChange={(e)=>setWhats(e.target.value)} />
                <label className="flex items-center gap-2 text-sm"><input type="checkbox" checked={privacyConsent} onChange={(e)=>setPrivacyConsent(e.target.checked)} required />Li e aceito os <a className="underline" href="/termos">Termos</a> e a <a className="underline" href="/privacidade">Política de Privacidade</a>.</label>
                <label className="flex items-center gap-2 text-sm"><input type="checkbox" checked={marketingOptIn} onChange={(e)=>setMarketingOptIn(e.target.checked)} />Aceito receber comunicações (opt-in).</label>
                <button className="border rounded px-3 py-2">Enviar</button>
              </form>
            );
          }
          EOF

      - name: Update lead-servicos.tsx
        run: |
          cat > src/pages/lead-servicos.tsx <<'EOF'
          import React, { useState } from "react";
          import { supabase } from "../lib/supabase";
          export default function LeadServicos() {
            const [nome, setNome] = useState(""); const [email, setEmail] = useState(""); const [whats, setWhats] = useS            if (typeof window === "undefined") return null;
            try { const raw = localStorage.getItem(STORAGE_KEY); return raw ? (JSON.parse(raw) as CookiePrefs) : null; }
            catch { return null; }
          }
          export function setCookiePrefs(prefs: CookiePrefs) {
            if (typeof window === "undefined") return;
            localStorage.setItem(STORAGE_KEY, JSON.stringify({ ...prefs, necessary: true }));
          }
          EOF

      - name: Write LegalLayout.tsx
        run: |
          cat > src/components/legal/LegalLayout.tsx <<'EOF'
          import React, { PropsWithChildren } from "react";
          type Props = PropsWithChildren<{ title: string; lastUpdated?: string }>;
          export default function LegalLayout({ title, lastUpdated, children }: Props) {
            return (
              <main className="mx-auto max-w-3xl px-6 py-10">
                <h1 className="text-3xl font-bold mb-2">{title}</h1>
                {lastUpdated && <p className="text-sm text-gray-500 mb-8">Última atualização: {lastUpdated}</p>}
                <div className="prose prose-slate max-w-none">{children}</div>
              </main>
            );
          }
          EOF

      - name: Write CookieBanner.tsx
        run: |
          cat > src/components/legal/CookieBanner.tsx <<'EOF'
          import React, { useEffect, useState } from "react";
          import { setCookiePrefs, getCookiePrefs, CookiePrefs } from "../../lib/legal";
          export default function CookieBanner() {
            const [visible, setVisible] = useState(false);
            useEffect(() => { const prefs = getCookiePrefs(); if (!prefs) setVisible(true); }, []);
            const acceptAll = () => { const all: CookiePrefs = { necessary: true, analytics: true, marketing: true }; setCookiePrefs(all); setVisible(false); };
            const rejectNonEssential = () => { const minimal: CookiePrefs = { necessary: true, analytics: false, marketing: false }; setCookiePrefs(minimal); setVisible(false); };
            if (!visible) return null;
            return (
              <div className="fixed bottom-4 inset-x-0 px-4">
                <div className="mx-auto max-w-3xl rounded-2xl border bg-white p-4 shadow">
                  <p className="mb-3 text-sm">
                    Usamos cookies para melhorar sua experiência, medir audiência e personalizar conteúdo.
                    Você pode aceitar todos ou gerenciar preferências. Ao continuar, você concorda com esta Política de Privacidade.
                  </p>
                  <div className="flex gap-2">
                    <button onClick={acceptAll} className="rounded-xl border px-3 py-2 text-sm">Aceitar todos</button>
                    <button onClick={rejectNonEssential} className="rounded-xl border px-3 py-2 text-sm">Rejeitar não essenciais</button>
                    <a href="#cookie-preferences" className="rounded-xl border px-3 py-2 text-sm underline" onClick={() => setVisible(false)}>Gerenciar preferências</a>
                  </div>
                </div>
              </div>
            );
          }
          EOF

      - name: Write ConsentCheckboxes.tsx
        run: |
          cat > src/components/legal/ConsentCheckboxes.tsx <<'EOF'
          import React, { useEffect, useState } from "react";
          import { CookiePrefs, getCookiePrefs, setCookiePrefs } from "../../lib/legal";
          export default function ConsentCheckboxes() {
            const [prefs, setPrefs] = useState<CookiePrefs>({ necessary: true, analytics: false, marketing: false });
            useEffect(() => { const saved = getCookiePrefs(); if (saved) setPrefs(saved); }, []);
            const update = (key: keyof CookiePrefs) => (e: React.ChangeEvent<HTMLInputElement>) => {
              const next = { ...prefs, [key]: e.target.checked || key === "necessary" };
              if (key === "necessary") next.necessary = true;
              setPrefs(next);
            };
            const save = () => { setCookiePrefs(prefs); alert("Preferências salvas."); };
            return (
              <div id="cookie-preferences" className="rounded-2xl border p-4 space-y-3">
                <label className="flex items-center gap-2"><input type="checkbox" checked readOnly /> <span><strong>Necessários</strong> (sempre ativos)</span></label>
                <label className="flex items-center gap-2"><input type="checkbox" checked={prefs.analytics} onChange={update("analytics")} /> <span>Analytics</span></label>
                <label className="flex items-center gap-2"><input type="checkbox" checked={prefs.marketing} onChange={update("marketing")} /> <span>Marketing</span></label>
                <button onClick={save} className="rounded-xl border px-3 py-2 text-sm">Salvar preferências</button>
              </div>
            );
          }
          EOF

      - name: Write DataRequestForm.tsx
        run: |
          cat > src/components/legal/DataRequestForm.tsx <<'EOF'
          import React, { useState } from "react";
          import { CONTACT_EMAIL, WHATSAPP_LINK } from "../../lib/legal";
          export default function DataRequestForm() {
            const [name, setName] = useState("");
            const [emailOrWhats, setEmailOrWhats] = useState("");
            const [requestType, setRequestType] = useState("acesso");
            const [message, setMessage] = useState("");
            const subject = encodeURIComponent(`LGPD - Solicitação de ${requestType} de dados`);
            const body = encodeURIComponent(`Nome: ${name}\nContato: ${emailOrWhats}\nTipo de solicitação: ${requestType}\n\nDescrição:\n${message}\n`);
            return (
              <div className="rounded-2xl border p-4 space-y-3">
                <div className="grid gap-3 sm:grid-cols-2">
                  <input className="rounded-xl border px-3 py-2" placeholder="Seu nome completo" value={name} onChange={(e) => setName(e.target.value)} />
                  <input className="rounded-xl border px-3 py-2" placeholder="Seu e-mail ou WhatsApp" value={emailOrWhats} onChange={(e) => setEmailOrWhats(e.target.value)} />
                </div>
                <select className="rounded-xl border px-3 py-2" value={requestType} onChange={(e) => setRequestType(e.target.value)}>
                  <option value="acesso">Acesso aos dados</option>
                  <option value="correcao">Correção</option>
                  <option value="eliminacao">Eliminação</option>
                  <option value="portabilidade">Portabilidade</option>
                  <option value="informacoes">Informações sobre compartilhamentos</option>
                  <option value="revogacao-consentimento">Revogação de consentimento</option>
                </select>
                <textarea className="w-full rounded-xl border px-3 py-2" rows={4} placeholder="Descreva sua solicitação." value={message} onChange={(e) => setMessage(e.target.value)} />
                <div className="flex flex-wrap gap-2">
                  <a className="rounded-xl border px-3 py-2 text-sm underline" href={`mailto:${CONTACT_EMAIL}?subject=${subject}&body=${body}`}>Enviar por e-mail (DPO)</a>
                  <a className="rounded-xl border px-3 py-2 text-sm underline" href={WHATSAPP_LINK} target="_blank" rel="noreferrer">Abrir no WhatsApp</a>
                </div>
                <p className="text-xs text-gray-500">Prazo-alvo de resposta: até 48h úteis.</p>
              </div>
            );
          }
          EOF

      - name: Write Privacidade.tsx
        run: |
          cat > src/pages/Privacidade.tsx <<'EOF'
          import React from "react";
          import LegalLayout from "../components/legal/LegalLayout";
          import CookieBanner from "../components/legal/CookieBanner";
          import ConsentCheckboxes from "../components/legal/ConsentCheckboxes";
          import DataRequestForm from "../components/legal/DataRequestForm";
          import { CONTACT_EMAIL, WHATSAPP_LINK, ORG_LEGAL_NAME, ORG_CNPJ, LAST_UPDATED } from "../lib/legal";

          export default function Privacidade() {
            return (
              <LegalLayout title="Política de Privacidade (LGPD)" lastUpdated={LAST_UPDATED}>
                <CookieBanner />
                <section className="space-y-4">
                  <h2 className="text-xl font-semibold">1. Controlador e Encarregado (DPO)</h2>
                  <p>Controlador: <strong>{ORG_LEGAL_NAME} – CNPJ {ORG_CNPJ}</strong>.<br />Encarregado (DPO): <a className="underline" href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a>.</p>
                  <h2 className="text-xl font-semibold">2. Quais dados coletamos</h2>
                  <ul className="list-disc pl-5 space-y-2">
                    <li><strong>Identificação/contato:</strong> nome, e-mail e WhatsApp.</li>
                    <li><strong>Conteúdo enviado:</strong> redações e anexos.</li>
                    <li><strong>Comprovantes:</strong> dados necessários para validar pagamento (sem armazenar cartão/banco).</li>
                    <li><strong>Técnicos/analytics:</strong> IP, dispositivo, páginas e horários (cookies).</li>
                  </ul>
                  <h2 className="text-xl font-semibold">3. Bases legais (LGPD)</h2>
                  <ul className="list-disc pl-5 space-y-2">
                    <li>Execução de contrato (art. 7º, V)</li>
                    <li>Consentimento (art. 7º, I) para marketing/publicação de redações</li>
                    <li>Legítimo interesse (art. 7º, IX) segurança/antifraude/usabilidade</li>
                    <li>Obrigação legal (art. 7º, II) registros fiscais/contábeis</li>
                  </ul>
                  <h2 className="text-xl font-semibold">4. Finalidades</h2>
                  <ul className="list-disc pl-5 space-y-2">
                    <li>Prestar e aperfeiçoar serviços</li>
                    <li>Comunicação operacional</li>
                    <li>Obrigações legais</li>
                    <li>Métricas e segurança</li>
                    <li>Marketing (se consentido)</li>
                  </ul>
                  <h2 className="text-xl font-semibold">5. Compartilhamento</h2>
                  <p>Provedores (hospedagem, e-mail, analytics, atendimento) e autoridades quando exigido por lei. <strong>Não vendemos</strong> dados.</p>
                  <h2 className="text-xl font-semibold">6. Retenção</h2>
                  <ul className="list-disc pl-5 space-y-2">
                    <li>Serviço: durante a relação e até 5 anos após</li>
                    <li>Logs: prazos compatíveis com segurança</li>
                    <li>Consentimento: até revogação/finalidade</li>
                  </ul>
                  <h2 className="text-xl font-semibold">7. Segurança</h2>
                  <p>Medidas técnicas e administrativas; notificaremos incidentes relevantes conforme LGPD.</p>
                  <h2 className="text-xl font-semibold">8. Direitos do titular</h2>
                  <p>Canais: <a className="underline" href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a> | <a className="underline" href={WHATSAPP_LINK} target="_blank" rel="noreferrer">WhatsApp</a> (prazo-alvo: 48h úteis)</p>
                  <h2 className="text-xl font-semibold">9. Cookies e preferências</h2>
                  <p>Gerencie suas preferências abaixo:</p>
                  <ConsentCheckboxes />
                  <h2 className="text-xl font-semibold">10. Menores de idade</h2>
                  <p>Serviços mediante contratação por responsável legal ou consentimento expresso (sujeito à comprovação).</p>
                  <h2 className="text-xl font-semibold">11. Transferências internacionais</h2>
                  <p>Aplicamos salvaguardas adequadas quando necessário.</p>
                  <h2 className="text-xl font-semibold">12. Exercício de direitos (formulário rápido)</h2>
                  <DataRequestForm />
                  <h2 className="text-xl font-semibold">13. Atualizações</h2>
                  <p>Manteremos a versão vigente com a data de atualização.</p>
                  <h2 className="text-xl font-semibold">14. Contato do DPO</h2>
                  <p><a className="underline" href={`mailto:${CONTACT_EMAIL}`}>{CONTACT_EMAIL}</a> | <a className="underline" href={WHATSAPP_LINK} target="_blank" rel="noreferrer">WhatsApp</a></p>
                </section>
              </LegalLayout>
            );
          }
          EOF

      - name: Create branch, commit and push
        run: |
          BRANCH="chore/privacy-legal-components"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B "$BRANCH"
          git add src/lib/legal.ts src/components/legal/*.tsx src/pages/Privacidade.tsx
          git commit -m "feat(legal): add Privacy page (TSX) + cookie banner, consent checkboxes, LGPD request form"
          git push -u origin "$BRANCH" --force

      - name: Open PR and try auto-merge (squash)
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e
          gh pr create --base main --head chore/privacy-legal-components \
            --title "Privacy page + legal components (LGPD)" \
            --body "Adiciona Política de Privacidade em React/TSX, banner de cookies, preferências de consentimento e formulário LGPD."
          gh pr merge --auto --squash || true
