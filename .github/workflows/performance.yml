name: Performance Budget Check

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  performance:
    runs-on: ubuntu-latest
    
    steps:
                  - name: Upload a Build Artifact
  uses: actions/upload-artifact@v4.6.2
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: gsaprova-landing-hub/github/workflows
    # The desired behavior if no files are found using the provided path.

          
      - name: Checkout code
        uses: actions/checkout@v4
      
    
  
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Check bundle size
        run: |
          # Get build sizes
          JS_SIZE=$(find dist/assets -name "*.js" -exec du -cb {} + | grep total | cut -f1)
          CSS_SIZE=$(find dist/assets -name "*.css" -exec du -cb {} + | grep total | cut -f1 2>/dev/null || echo "0")
          
          # Convert to KB
          JS_SIZE_KB=$((JS_SIZE / 1024))
          CSS_SIZE_KB=$((CSS_SIZE / 1024))
          
          echo "JavaScript bundle size: ${JS_SIZE_KB}KB"
          echo "CSS bundle size: ${CSS_SIZE_KB}KB"
          
          # Performance budgets (in KB)
          JS_BUDGET=10000
          CSS_BUDGET=5000
          
          # Check budgets
          if [ $JS_SIZE_KB -gt $JS_BUDGET ]; then
            echo "❌ JavaScript bundle size (${JS_SIZE_KB}KB) exceeds budget (${JS_BUDGET}KB)"
            exit 1
          else
            echo "✅ JavaScript bundle size within budget"
          fi
          
          if [ $CSS_SIZE_KB -gt $CSS_BUDGET ]; then
            echo "❌ CSS bundle size (${CSS_SIZE_KB}KB) exceeds budget (${CSS_BUDGET}KB)"
            exit 1
          else
            echo "✅ CSS bundle size within budget"
          fi
          
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
